name: Build and push nginx-repack to GitHub container registry

on:
  workflow_dispatch:
    inputs:
      nginx_version:
        description: "Nginx version to build"
        required: true
        default: "1.29.0"
  push:
    branches:
      - "main"
    paths:
      - Dockerfile
      - .github/workflows/build-and-push.yml

env:
  REGISTRY: ghcr.io
  NGINX_VERSION: ${{ github.event.inputs.nginx_version || '1.29.0' }}

jobs:
  build-and-push:
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            arch: amd64
          - runner: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.REGISTRY }}/ebrahimmfadae/nginx-repack:${{ env.NGINX_VERSION }}-${{ matrix.arch }}
          build-args: |
            NGINX_VERSION=${{ env.NGINX_VERSION }}
          context: .
          platforms: linux/${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
  merge:
    runs-on: ubuntu-24.04-arm
    needs: [build-and-push]
    permissions:
      packages: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge platform images
        env:
          IMAGE_URI: ${{ env.REGISTRY }}/ebrahimmfadae/nginx-repack:${{ env.NGINX_VERSION }}
        run: |
          docker buildx imagetools create ${{ env.IMAGE_URI }}-amd64 ${{ env.IMAGE_URI }}-arm64 --tag=${{ env.IMAGE_URI }}
